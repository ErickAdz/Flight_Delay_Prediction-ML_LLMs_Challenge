<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="4" skipped="0" tests="4" time="35.026" timestamp="2023-11-05T20:29:07.093359" hostname="Draven-Desk"><testcase classname="tests.api.test_api.TestBatchPipeline" name="test_should_failed_unkown_column_1" time="0.057"><failure message="AttributeError: module 'anyio' has no attribute 'start_blocking_portal'">self = &lt;tests.api.test_api.TestBatchPipeline testMethod=test_should_failed_unkown_column_1&gt;

    def test_should_failed_unkown_column_1(self):
        data = {
            "flights": [
                {
                    "OPERA": "Aerolineas Argentinas",
                    "TIPOVUELO": "N",
                    "MES": 13
                }
            ]
        }
        # when("xgboost.XGBClassifier").predict(ANY).thenReturn(np.array([0]))# change this line to the model of chosing
&gt;       response = self.client.post("/predict", json=data)

tests/api/test_api.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.env/lib/python3.10/site-packages/requests/sessions.py:637: in post
    return self.request("POST", url, data=data, json=json, **kwargs)
.env/lib/python3.10/site-packages/starlette/testclient.py:473: in request
    return super().request(
.env/lib/python3.10/site-packages/requests/sessions.py:589: in request
    resp = self.send(prep, **send_kwargs)
.env/lib/python3.10/site-packages/requests/sessions.py:703: in send
    r = adapter.send(request, **kwargs)
.env/lib/python3.10/site-packages/starlette/testclient.py:267: in send
    raise exc
.env/lib/python3.10/site-packages/starlette/testclient.py:262: in send
    with self.portal_factory() as portal:
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;starlette.testclient.TestClient object at 0x7ff67b2cb670&gt;

    @contextlib.contextmanager
    def _portal_factory(
        self,
    ) -&gt; typing.Generator[anyio.abc.BlockingPortal, None, None]:
        if self.portal is not None:
            yield self.portal
        else:
&gt;           with anyio.start_blocking_portal(**self.async_backend) as portal:
E           AttributeError: module 'anyio' has no attribute 'start_blocking_portal'

.env/lib/python3.10/site-packages/starlette/testclient.py:450: AttributeError</failure></testcase><testcase classname="tests.api.test_api.TestBatchPipeline" name="test_should_failed_unkown_column_2" time="0.002"><failure message="AttributeError: module 'anyio' has no attribute 'start_blocking_portal'">self = &lt;tests.api.test_api.TestBatchPipeline testMethod=test_should_failed_unkown_column_2&gt;

    def test_should_failed_unkown_column_2(self):
        data = {
            "flights": [
                {
                    "OPERA": "Aerolineas Argentinas",
                    "TIPOVUELO": "O",
                    "MES": 13
                }
            ]
        }
        # when("xgboost.XGBClassifier").predict(ANY).thenReturn(np.array([0]))# change this line to the model of chosing
&gt;       response = self.client.post("/predict", json=data)

tests/api/test_api.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.env/lib/python3.10/site-packages/requests/sessions.py:637: in post
    return self.request("POST", url, data=data, json=json, **kwargs)
.env/lib/python3.10/site-packages/starlette/testclient.py:473: in request
    return super().request(
.env/lib/python3.10/site-packages/requests/sessions.py:589: in request
    resp = self.send(prep, **send_kwargs)
.env/lib/python3.10/site-packages/requests/sessions.py:703: in send
    r = adapter.send(request, **kwargs)
.env/lib/python3.10/site-packages/starlette/testclient.py:267: in send
    raise exc
.env/lib/python3.10/site-packages/starlette/testclient.py:262: in send
    with self.portal_factory() as portal:
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;starlette.testclient.TestClient object at 0x7ff67b26e9e0&gt;

    @contextlib.contextmanager
    def _portal_factory(
        self,
    ) -&gt; typing.Generator[anyio.abc.BlockingPortal, None, None]:
        if self.portal is not None:
            yield self.portal
        else:
&gt;           with anyio.start_blocking_portal(**self.async_backend) as portal:
E           AttributeError: module 'anyio' has no attribute 'start_blocking_portal'

.env/lib/python3.10/site-packages/starlette/testclient.py:450: AttributeError</failure></testcase><testcase classname="tests.api.test_api.TestBatchPipeline" name="test_should_failed_unkown_column_3" time="0.002"><failure message="AttributeError: module 'anyio' has no attribute 'start_blocking_portal'">self = &lt;tests.api.test_api.TestBatchPipeline testMethod=test_should_failed_unkown_column_3&gt;

    def test_should_failed_unkown_column_3(self):
        data = {
            "flights": [
                {
                    "OPERA": "Argentinas",
                    "TIPOVUELO": "O",
                    "MES": 13
                }
            ]
        }
        # when("xgboost.XGBClassifier").predict(ANY).thenReturn(np.array([0]))
&gt;       response = self.client.post("/predict", json=data)

tests/api/test_api.py:66: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.env/lib/python3.10/site-packages/requests/sessions.py:637: in post
    return self.request("POST", url, data=data, json=json, **kwargs)
.env/lib/python3.10/site-packages/starlette/testclient.py:473: in request
    return super().request(
.env/lib/python3.10/site-packages/requests/sessions.py:589: in request
    resp = self.send(prep, **send_kwargs)
.env/lib/python3.10/site-packages/requests/sessions.py:703: in send
    r = adapter.send(request, **kwargs)
.env/lib/python3.10/site-packages/starlette/testclient.py:267: in send
    raise exc
.env/lib/python3.10/site-packages/starlette/testclient.py:262: in send
    with self.portal_factory() as portal:
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;starlette.testclient.TestClient object at 0x7ff67b110d30&gt;

    @contextlib.contextmanager
    def _portal_factory(
        self,
    ) -&gt; typing.Generator[anyio.abc.BlockingPortal, None, None]:
        if self.portal is not None:
            yield self.portal
        else:
&gt;           with anyio.start_blocking_portal(**self.async_backend) as portal:
E           AttributeError: module 'anyio' has no attribute 'start_blocking_portal'

.env/lib/python3.10/site-packages/starlette/testclient.py:450: AttributeError</failure></testcase><testcase classname="tests.api.test_api.TestBatchPipeline" name="test_should_get_predict" time="0.002"><failure message="AttributeError: module 'anyio' has no attribute 'start_blocking_portal'">self = &lt;tests.api.test_api.TestBatchPipeline testMethod=test_should_get_predict&gt;

    def test_should_get_predict(self):
        data = {
            "flights": [
                {
                    "OPERA": "Aerolineas Argentinas",
                    "TIPOVUELO": "N",
                    "MES": 3
                }
            ]
        }
        # when("xgboost.XGBClassifier").predict(ANY).thenReturn(np.array([0])) # change this line to the model of chosing
&gt;       response = self.client.post("/predict", json=data)

tests/api/test_api.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.env/lib/python3.10/site-packages/requests/sessions.py:637: in post
    return self.request("POST", url, data=data, json=json, **kwargs)
.env/lib/python3.10/site-packages/starlette/testclient.py:473: in request
    return super().request(
.env/lib/python3.10/site-packages/requests/sessions.py:589: in request
    resp = self.send(prep, **send_kwargs)
.env/lib/python3.10/site-packages/requests/sessions.py:703: in send
    r = adapter.send(request, **kwargs)
.env/lib/python3.10/site-packages/starlette/testclient.py:267: in send
    raise exc
.env/lib/python3.10/site-packages/starlette/testclient.py:262: in send
    with self.portal_factory() as portal:
/usr/lib/python3.10/contextlib.py:135: in __enter__
    return next(self.gen)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;starlette.testclient.TestClient object at 0x7ff67b1404f0&gt;

    @contextlib.contextmanager
    def _portal_factory(
        self,
    ) -&gt; typing.Generator[anyio.abc.BlockingPortal, None, None]:
        if self.portal is not None:
            yield self.portal
        else:
&gt;           with anyio.start_blocking_portal(**self.async_backend) as portal:
E           AttributeError: module 'anyio' has no attribute 'start_blocking_portal'

.env/lib/python3.10/site-packages/starlette/testclient.py:450: AttributeError</failure></testcase></testsuite></testsuites>